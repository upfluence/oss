@import '_variables';
@import '_mixins';

.fill(@color) {
  border-color: @color;
  background-color: @color;
}

.outline(@color) {
  border: 1px solid @color;
  background-color: @upf-gray-light;
  color: @color;
}


//
// Remove outer colors
//
.remove-outer-colors {
  border: none;
  background-color: transparent;
}

//
// Sets an icon's color.
//
.icon-color(@color) {
  .fa {
    color: @color;
  }
}

.btn {
  font-family: @font-text-title;
}

//
// Extend the bootstrap buttons for upf-btn class.
//
// This way, we can skip using the btn class in HTML code, but it's still
// compatible with code mentioning it. This is a good way to be only use
// Upfluence OSS classes in HTML code.And to be independent from Bootstrap on
// the markup side.
//
.upf-btn { .btn; }
.upf-btn--x-small { .btn-xs; border-radius: @default-radius }
.upf-btn--small { .btn-sm; border-radius: @default-radius }
.upf-btn--large { .btn-lg; border-radius: @default-radius }

//
// Mixin for building a button
// Takes 3 parameters:
//   - base-color: used for default state,
//   - lighter-color: used for disabled state
//   - darker-color: used for active and on hover states
//
.build-button(@base-color, @lighter-color, @darker-color) {
  .fill(@base-color);
  .icon-color(@color-text-contrast);
  color: @color-text-contrast;

  &:hover {
    .active;
  }

  &.active, &:active, .active:active, .active:focus, &:focus {
    .remove-outline;
    .fill(@darker-color);
    color: @color-text-contrast;
    opacity: 1;
  }

  &.disabled {
    .fill(@lighter-color);
    opacity: 0.5;
  }
}

//
// Mixin for building Ghost Buttons.
// Those are caracterized by their transparent background, making them able to
// be almost anywhere, particularly on dark backgrounds.
//
// Takes 2 arguments;
//   - base color: used for button text and outline color in default and disabled
//                 states
//   - lighter-color: used for active, focus, and hover states
//
.reversed-colors(@base-color) {
  .outline(@base-color);
  .icon-color(@base-color);
  color: @base-color;
  transition: all 0.5s ease;

  &:hover {
    .active;
  }

  &.active, &:active, .active:active, .active:focus, &:focus {
    .remove-outline;
    .fill(@base-color);
    color: @color-text-contrast;
  }

  &.disabled {
    background-color: transparent;
    opacity: 0.5;
  }
}


//
// Main Buttons
// Those buttons can be used for both Call to Actions or Primary actions.
// There should be only one main button in a given page or components group.
//
.upf-btn--orange {
  .build-button(@upf-primary-orange, @upf-primary-orange-light, @upf-primary-orange-dark);
}

.upf-btn--purple {
  .build-button(@upf-primary-bright-purple, @upf-primary-bright-purple-light, @upf-primary-bright-purple-dark);
}

//
// Secondary Buttons
// Those can be used to back main buttons. As there can be only one main button
// in a given page or components group, a Secondary buttons is the way to go
// if you want to have an alternative button.
//
.upf-btn--orange--reversed { .reversed-colors(@upf-primary-orange); }
.upf-btn--purple--reversed { .reversed-colors(@upf-primary-bright-purple); }

//
// Tertiary Buttons
// Buttons extending the Secondary buttons but with no background nor border.
// They then have the look and feel of a Link and are usable as tertiary buttons
// if a page or components group already have a Main and a Secondary button.
//
.upf-btn--purple--transparent { &:extend(.upf-btn--purple--reversed); .remove-outer-colors; }
.upf-btn--orange--transparent { &:extend(.upf-btn--orange--reversed); .remove-outer-colors; }


//
// Toggle Button (Actually a stylish checkbox)
//
.upf-toggle-btn {}

  //
  // Larger than x-toggle component's "miedum size", but less than its
  // "large size".
  //
  .upf-toggle-btn .x-toggle-container { width: 4.75em; }

  .upf-toggle-btn .x-toggle-btn {
    background-color: @upf-gray; // Switch color when OFF
    border-radius: 20px !important;
    padding: 2px;

    &:after {
      border-radius: 30px !important;
      background-color: @color-text-contrast;
    }
  }

  // Switch color when ON.
  .upf-toggle-btn .x-toggle-container-checked .x-toggle-btn {
    background-color: @upf-primary-dark-purple !important;
  }
